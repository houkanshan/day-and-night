{"version":3,"sources":["webpack:///webpack/bootstrap 80212b272b8a21c7cbfe","webpack:///./source/js/index.es","webpack:///./~/babel-regenerator-runtime/runtime.js","webpack:///./~/process/browser.js","webpack:///./source/js/logo.es","webpack:///./source/js/background.es","webpack:///./source/js/fragments.es","webpack:///./source/js/randomTransform.es","webpack:///./source/js/stars.es","webpack:///./source/js/load-font.es"],"names":["showHide","imgs","document","querySelectorAll","len","length","forEach","img","src","getAttribute","i","classList","add","setTimeout","remove","gen","next","setInterval","container","querySelector","fragments","fragLen","getRamdomFragment","Math","random","generateFragment","minSize","maxSize","f","newF","createElement","innerHTML","outerHTML","children","appendChild","renderFragments","el","startY","middleY","endY","body","clientHeight","startX","endX","clientWidth","nrand","x1","x2","rad","y1","c","sqrt","log","getRandomPos","top","left","randomTransform","width","style","pos","transform","r","starPool","runningStar","allStarCount","generateStar","s","className","pop","push","opacity","splice","indexOf","renderStars","fontname","fonts","load","then","classname"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA;;AACA;;AACA;;AACA,wB;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd,MAAK;AACL,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,WAAW;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;;AAEA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAiC,kBAAkB;AACnD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAY;AACZ;AACA;;AAEA;AACA,aAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA,YAAW;AACX;AACA;AACA;;AAEA,YAAW;AACX;AACA;AACA;;AAEA,YAAW;AACX;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,+CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA,+CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,+CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChpBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;;;gBC5K5BA,Q;;;;AAPV,KAAMC,oCAAWC,SAASC,gBAAT,CAA0B,oBAA1B,CAAX,EAAN;AACA,KAAMC,MAAMH,KAAKI,MAAjB;;AAEAJ,MAAKK,OAAL,CAAa,UAASC,GAAT,EAAc;AACzBA,OAAIC,GAAJ,GAAUD,IAAIE,YAAJ,CAAiB,UAAjB,CAAV;AACD,EAFD;;AAIA,UAAUT,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACMU,YADN,GACU,CADV;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGIT,gBAAKS,CAAL,EAAQC,SAAR,CAAkBC,GAAlB,CAAsB,MAAtB;AACAC,sBAAW,aAAK;AACdZ,kBAAKS,CAAL,EAAQC,SAAR,CAAkBG,MAAlB,CAAyB,MAAzB;AACD,YAFD,EAEG,IAFH;AAJJ;AAAA;;AAAA;AAQIJ,eAAI,CAACA,IAAI,CAAL,IAAUN,GAAd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","file":"js/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 80212b272b8a21c7cbfe","import './load-font.es'\nimport 'babel-regenerator-runtime'\nimport './logo.es'\nimport './background.es'\n\n\n\n// WEBPACK FOOTER //\n// ./source/js/index.es","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var iteratorSymbol =\n    typeof Symbol === \"function\" && Symbol.iterator || \"@@iterator\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided, then outerFn.prototype instanceof Generator.\n    var generator = Object.create((outerFn || Generator).prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `value instanceof AwaitArgument` to determine if the yielded value is\n  // meant to be awaited. Some may consider the name of this method too\n  // cutesy, but they are curmudgeons.\n  runtime.awrap = function(arg) {\n    return new AwaitArgument(arg);\n  };\n\n  function AwaitArgument(arg) {\n    this.arg = arg;\n  }\n\n  function AsyncIterator(generator) {\n    // This invoke function is written in a style that assumes some\n    // calling function (or Promise) will handle exceptions.\n    function invoke(method, arg) {\n      var result = generator[method](arg);\n      var value = result.value;\n      return value instanceof AwaitArgument\n        ? Promise.resolve(value.arg).then(invokeNext, invokeThrow)\n        : Promise.resolve(value).then(function(unwrapped) {\n            // When a yielded Promise is resolved, its final value becomes\n            // the .value of the Promise<{value,done}> result for the\n            // current iteration. If the Promise is rejected, however, the\n            // result for this iteration will be rejected with the same\n            // reason. Note that rejections of yielded Promises are not\n            // thrown back into the generator function, as is the case\n            // when an awaited Promise is rejected. This difference in\n            // behavior between yield and await is important, because it\n            // allows the consumer to decide what to do with the yielded\n            // rejection (swallow it and continue, manually .throw it back\n            // into the generator, abandon iteration, whatever). With\n            // await, by contrast, there is no opportunity to examine the\n            // rejection reason outside the generator function, so the\n            // only option is to throw it from the await expression, and\n            // let the generator function handle the exception.\n            result.value = unwrapped;\n            return result;\n          });\n    }\n\n    if (typeof process === \"object\" && process.domain) {\n      invoke = process.domain.bind(invoke);\n    }\n\n    var invokeNext = invoke.bind(generator, \"next\");\n    var invokeThrow = invoke.bind(generator, \"throw\");\n    var invokeReturn = invoke.bind(generator, \"return\");\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return invoke(method, arg);\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : new Promise(function (resolve) {\n          resolve(callInvokeWithMethodAndArg());\n        });\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          if (method === \"return\" ||\n              (method === \"throw\" && delegate.iterator[method] === undefined)) {\n            // A return or throw (when the delegate iterator has no throw\n            // method) always terminates the yield* loop.\n            context.delegate = null;\n\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            var returnMethod = delegate.iterator[\"return\"];\n            if (returnMethod) {\n              var record = tryCatch(returnMethod, delegate.iterator, arg);\n              if (record.type === \"throw\") {\n                // If the return method threw an exception, let that\n                // exception prevail over the original return or throw.\n                method = \"throw\";\n                arg = record.arg;\n                continue;\n              }\n            }\n\n            if (method === \"return\") {\n              // Continue with the outer return, now that the delegate\n              // iterator has been terminated.\n              continue;\n            }\n          }\n\n          var record = tryCatch(\n            delegate.iterator[method],\n            delegate.iterator,\n            arg\n          );\n\n          if (record.type === \"throw\") {\n            context.delegate = null;\n\n            // Like returning generator.throw(uncaught), but without the\n            // overhead of an extra function call.\n            method = \"throw\";\n            arg = record.arg;\n            continue;\n          }\n\n          // Delegate generator ran and handled its own exceptions so\n          // regardless of what the method was, we continue as if it is\n          // \"next\" with an undefined arg.\n          method = \"next\";\n          arg = undefined;\n\n          var info = record.arg;\n          if (info.done) {\n            context[delegate.resultName] = info.value;\n            context.next = delegate.nextLoc;\n          } else {\n            state = GenStateSuspendedYield;\n            return info;\n          }\n\n          context.delegate = null;\n        }\n\n        if (method === \"next\") {\n          context._sent = arg;\n\n          if (state === GenStateSuspendedYield) {\n            context.sent = arg;\n          } else {\n            context.sent = undefined;\n          }\n        } else if (method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw arg;\n          }\n\n          if (context.dispatchException(arg)) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            method = \"next\";\n            arg = undefined;\n          }\n\n        } else if (method === \"return\") {\n          context.abrupt(\"return\", arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          var info = {\n            value: record.arg,\n            done: context.done\n          };\n\n          if (record.arg === ContinueSentinel) {\n            if (context.delegate && method === \"next\") {\n              // Deliberately forget the last sent value so that we don't\n              // accidentally pass it on to the delegate.\n              arg = undefined;\n            }\n          } else {\n            return info;\n          }\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(arg) call above.\n          method = \"throw\";\n          arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      this.sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.next = finallyEntry.finallyLoc;\n      } else {\n        this.complete(record);\n      }\n\n      return ContinueSentinel;\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = record.arg;\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-regenerator-runtime/runtime.js\n// module id = 1\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 2\n// module chunks = 0","const imgs = [...document.querySelectorAll('#logo-overlays img')]\nconst len = imgs.length\n\nimgs.forEach(function(img) {\n  img.src = img.getAttribute('data-src')\n})\n\nfunction *showHide() {\n  let i = 0\n  while(42) {\n    imgs[i].classList.add('show')\n    setTimeout(_ => {\n      imgs[i].classList.remove('show')\n    }, 5000)\n    yield\n    i = (i + 1) % len\n  }\n}\n\nif (len) {\n  const gen = showHide()\n  setTimeout(function() {\n    gen.next()\n  }, 3000)\n  setInterval(_ => {\n    gen.next()\n  }, 15000)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./source/js/logo.es","import './fragments.es'\nimport './stars.es'\n\n\n\n// WEBPACK FOOTER //\n// ./source/js/background.es","import randomTransform from './randomTransform.es'\n\nconst container = document.querySelector('#fragments')\nconst fragments = container.querySelectorAll('svg')\nconst fragLen = fragments.length\n\n\nfunction getRamdomFragment() {\n  return fragments[Math.random() * fragLen | 0]\n}\n\nfunction generateFragment(minSize, maxSize) {\n  const f = getRamdomFragment()\n  let newF = document.createElement('div')\n  newF.innerHTML = f.outerHTML\n  newF = newF.children[0]\n  randomTransform(newF, {minSize, maxSize})\n\n  container.appendChild(newF)\n}\n\nfunction renderFragments() {\n  for(let i = 0; i < 20; i++) {\n    generateFragment(5, 10)\n  }\n  for(let i = 0; i < 10; i++) {\n    generateFragment(10, 20)\n  }\n  for(let i = 0; i < 5; i++) {\n    generateFragment(20, 40)\n  }\n  [...fragments].forEach(el => {\n    el.remove()\n  })\n  container.classList.add('ready')\n}\n\nrenderFragments()\n\n\n\n// WEBPACK FOOTER //\n// ./source/js/fragments.es","const startY = 0\nconst middleY = 300\nconst endY = document.body.clientHeight\n\nconst startX = 0\nconst endX = document.body.clientWidth\n\nfunction nrand(){\n\tvar x1, x2, rad, y1\n\tdo {\n\t\tx1 = 2 * Math.random() - 1\n\t\tx2 = 2 * Math.random() - 1\n\t\trad = x1 * x1 + x2 * x2\n\t} while(rad >= 1 || rad == 0)\n\n\tvar c = Math.sqrt(-2 * Math.log(rad) / rad)\n\n\treturn x1 * c / 2\n}\n\nfunction getRandomPos() {\n  return {\n    top: nrand() * middleY + middleY,\n    left: Math.random() * 100,\n  }\n}\n\nfunction randomTransform(el, { minSize, maxSize }) {\n  const width = Math.random() * (maxSize - minSize) + minSize\n  el.style.width = width + 'px'\n\n  const pos = getRandomPos()\n  el.style.top = pos.top + 'px'\n  el.style.left = pos.left + '%'\n\n  el.style.transform = `rotate(${Math.random()*180}deg)`\n\n  return el\n}\n\nexport default randomTransform\n\n\n\n// WEBPACK FOOTER //\n// ./source/js/randomTransform.es","import randomTransform from './randomTransform.es'\n\nconst container = document.querySelector('#stars')\n\nfunction r() {\n  return Math.random() - 0.5\n}\n\nconst starPool = []\nconst runningStar = []\nlet allStarCount = 0\n\nfunction generateStar({minSize, maxSize}) {\n  let s\n  if (allStarCount < 10) {\n    s = document.createElement('span')\n    s.className = 'star'\n    container.appendChild(s)\n    allStarCount += 1\n  } else if (starPool.length) {\n    s = starPool.pop()\n  } else {\n    return\n  }\n\n  runningStar.push(s)\n  randomTransform(s, {minSize, maxSize})\n\n  setTimeout(_ => {\n    s.style.transform =\n    `translate3d(${r()*800}px,${r()*800}px, 0)`\n    s.style.opacity = 0.3\n  }, 300)\n\n  setTimeout(_ => {\n    starPool.push(runningStar.splice(runningStar.indexOf(s), 1)[0])\n  }, 10000)\n  return s\n}\n\n\nfunction renderStars() {\n  setInterval(_ => {\n    generateStar({ minSize: 2, maxSize: 5 })\n  }, 1000)\n}\n\nrenderStars()\n\n\n\n// WEBPACK FOOTER //\n// ./source/js/stars.es","const fontname = 'amatic'\n\nif (document.fonts) {\n  document.fonts.load('1em ' + fontname).then(function() {\n    document.body.classList.add('font-loaded')\n  }, function() {\n    document.body.classList.add('font-loaded')\n  })\n} else {\n  document.body.classname = 'font-loaded'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./source/js/load-font.es"],"sourceRoot":""}