{"version":3,"sources":["webpack:///js/index.js","webpack:///webpack/bootstrap 9098416aae6643d32108","webpack:///./source/js/index.es","webpack:///./source/js/load-font.es","webpack:///./~/babel-regenerator-runtime/runtime.js","webpack:///./~/process/browser.js","webpack:///./source/js/logo.es","webpack:///./source/js/background.es","webpack:///./source/js/fragments.es","webpack:///./source/js/randomTransform.es","webpack:///./source/js/stars.es","webpack:///./source/js/f_weixin.es"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","fontname","document","fonts","load","then","body","classList","add","classname","global","process","wrap","innerFn","outerFn","self","tryLocsList","generator","Object","create","Generator","prototype","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","obj","arg","type","err","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","forEach","method","this","AwaitArgument","AsyncIterator","invoke","result","value","Promise","resolve","invokeNext","invokeThrow","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","domain","bind","state","GenStateSuspendedStart","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","iterator","undefined","returnMethod","record","info","done","GenStateSuspendedYield","resultName","next","nextLoc","_sent","sent","dispatchException","abrupt","ContinueSentinel","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","values","iterable","iteratorMethod","iteratorSymbol","isNaN","length","i","hasOwn","hasOwnProperty","Symbol","inModule","runtime","regeneratorRuntime","Gp","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","window","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","e","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","_toConsumableArray","arr","isArray","arr2","from","showHide","_context","imgs","_","remove","_marked","map","querySelectorAll","img","src","getAttribute","gen","setInterval","_interopRequireDefault","__esModule","default","getRamdomFragment","fragments","Math","random","fragLen","generateFragment","minSize","maxSize","f","newF","createElement","innerHTML","outerHTML","children","_randomTransform2","container","appendChild","renderFragments","el","_randomTransform","querySelector","nrand","x1","x2","rad","sqrt","log","getRandomPos","top","middleY","left","randomTransform","_ref","width","style","pos","transform","defineProperty","clientHeight","clientWidth","r","generateStar","s","allStarCount","className","starPool","runningStar","opacity","splice","indexOf","renderStars","test","navigator","userAgent","btn","addEventListener","preventDefault","alert"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,EAASH,GAE/B,YE9CDA,GAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,IFwDM,SAASI,EAAQD,GAEtB,YG9DD,IAAMQ,GAAW,QAEbC,UAASC,MACXD,SAASC,MAAMC,KAAK,OAASH,GAAUI,KAAK,WAC1CH,SAASI,KAAKC,UAAUC,IAAI,gBAC3B,WACDN,SAASI,KAAKC,UAAUC,IAAI,iBAG9BN,SAASI,KAAKG,UAAY,eHqEtB,SAASf,EAAQD,EAASH,II9EhC,SAAAoB,EAAAC,IAUA,SAAAD,GACA,YAwBA,SAAAE,GAAAC,EAAAC,EAAAC,EAAAC,GAEA,GAAAC,GAAAC,OAAAC,QAAAL,GAAAM,GAAAC,WACAC,EAAA,GAAAC,GAAAP,MAMA,OAFAC,GAAAO,QAAAC,EAAAZ,EAAAE,EAAAO,GAEAL,EAcA,QAAAS,GAAAC,EAAAC,EAAAC,GACA,IACA,OAAcC,KAAA,SAAAD,IAAAF,EAAA9B,KAAA+B,EAAAC,IACT,MAAAE,GACL,OAAcD,KAAA,QAAAD,IAAAE,IAiBd,QAAAX,MACA,QAAAY,MACA,QAAAC,MASA,QAAAC,GAAAb,IACA,yBAAAc,QAAA,SAAAC,GACAf,EAAAe,GAAA,SAAAP,GACA,MAAAQ,MAAAb,QAAAY,EAAAP,MAkCA,QAAAS,GAAAT,GACAQ,KAAAR,MAGA,QAAAU,GAAAtB,GAGA,QAAAuB,GAAAJ,EAAAP,GACA,GAAAY,GAAAxB,EAAAmB,GAAAP,GACAa,EAAAD,EAAAC,KACA,OAAAA,aAAAJ,GACAK,QAAAC,QAAAF,EAAAb,KAAAxB,KAAAwC,EAAAC,GACAH,QAAAC,QAAAF,GAAArC,KAAA,SAAA0C,GAiBA,MADAN,GAAAC,MAAAK,EACAN,IAaA,QAAAO,GAAAZ,EAAAP,GACA,QAAAoB,KACA,MAAAT,GAAAJ,EAAAP,GAGA,MAAAqB,GAaAA,IAAA7C,KACA4C,EAGAA,GACA,GAAAN,SAAA,SAAAC,GACAA,EAAAK,OAjCA,gBAAAtC,MAAAwC,SACAX,EAAA7B,EAAAwC,OAAAC,KAAAZ,GAGA,IAGAU,GAHAL,EAAAL,EAAAY,KAAAnC,EAAA,QACA6B,EAAAN,EAAAY,KAAAnC,EAAA,QACAuB,GAAAY,KAAAnC,EAAA,SAiCAoB,MAAAb,QAAAwB,EAoBA,QAAAvB,GAAAZ,EAAAE,EAAAO,GACA,GAAA+B,GAAAC,CAEA,iBAAAlB,EAAAP,GACA,GAAAwB,IAAAE,EACA,SAAAC,OAAA,+BAGA,IAAAH,IAAAI,EAAA,CACA,aAAArB,EACA,KAAAP,EAKA,OAAA6B,KAGA,QACA,GAAAC,GAAArC,EAAAqC,QACA,IAAAA,EAAA,CACA,cAAAvB,GACA,UAAAA,GAAAuB,EAAAC,SAAAxB,KAAAyB,EAAA,CAGAvC,EAAAqC,SAAA,IAIA,IAAAG,GAAAH,EAAAC,SAAA,MACA,IAAAE,EAAA,CACA,GAAAC,GAAArC,EAAAoC,EAAAH,EAAAC,SAAA/B,EACA,cAAAkC,EAAAjC,KAAA,CAGAM,EAAA,QACAP,EAAAkC,EAAAlC,GACA,WAIA,cAAAO,EAGA,SAIA,GAAA2B,GAAArC,EACAiC,EAAAC,SAAAxB,GACAuB,EAAAC,SACA/B,EAGA,cAAAkC,EAAAjC,KAAA,CACAR,EAAAqC,SAAA,KAIAvB,EAAA,QACAP,EAAAkC,EAAAlC,GACA,UAMAO,EAAA,OACAP,EAAAgC,CAEA,IAAAG,GAAAD,EAAAlC,GACA,KAAAmC,EAAAC,KAKA,MADAZ,GAAAa,EACAF,CAJA1C,GAAAqC,EAAAQ,YAAAH,EAAAtB,MACApB,EAAA8C,KAAAT,EAAAU,QAMA/C,EAAAqC,SAAA,KAGA,YAAAvB,EACAd,EAAAgD,MAAAzC,EAEAwB,IAAAa,EACA5C,EAAAiD,KAAA1C,EAEAP,EAAAiD,KAAAV,MAES,cAAAzB,EAAA,CACT,GAAAiB,IAAAC,EAEA,KADAD,GAAAI,EACA5B,CAGAP,GAAAkD,kBAAA3C,KAGAO,EAAA,OACAP,EAAAgC,OAGS,WAAAzB,GACTd,EAAAmD,OAAA,SAAA5C,EAGAwB,GAAAE,CAEA,IAAAQ,GAAArC,EAAAb,EAAAE,EAAAO,EACA,eAAAyC,EAAAjC,KAAA,CAGAuB,EAAA/B,EAAA2C,KACAR,EACAS,CAEA,IAAAF,IACAtB,MAAAqB,EAAAlC,IACAoC,KAAA3C,EAAA2C,KAGA,IAAAF,EAAAlC,MAAA6C,EAOA,MAAAV,EANA1C,GAAAqC,UAAA,SAAAvB,IAGAP,EAAAgC,OAMS,UAAAE,EAAAjC,OACTuB,EAAAI,EAGArB,EAAA,QACAP,EAAAkC,EAAAlC,OAkBA,QAAA8C,GAAAC,GACA,GAAAC,IAAiBC,OAAAF,EAAA,GAEjB,KAAAA,KACAC,EAAAE,SAAAH,EAAA,IAGA,IAAAA,KACAC,EAAAG,WAAAJ,EAAA,GACAC,EAAAI,SAAAL,EAAA,IAGAvC,KAAA6C,WAAAC,KAAAN,GAGA,QAAAO,GAAAP,GACA,GAAAd,GAAAc,EAAAQ,cACAtB,GAAAjC,KAAA,eACAiC,GAAAlC,IACAgD,EAAAQ,WAAAtB,EAGA,QAAAxC,GAAAP,GAIAqB,KAAA6C,aAAwBJ,OAAA,SACxB9D,EAAAmB,QAAAwC,EAAAtC,MACAA,KAAAiD,OAAA,GA8BA,QAAAC,GAAAC,GACA,GAAAA,EAAA,CACA,GAAAC,GAAAD,EAAAE,EACA,IAAAD,EACA,MAAAA,GAAA5F,KAAA2F,EAGA,sBAAAA,GAAApB,KACA,MAAAoB,EAGA,KAAAG,MAAAH,EAAAI,QAAA,CACA,GAAAC,IAAA,EAAAzB,EAAA,QAAAA,KACA,OAAAyB,EAAAL,EAAAI,QACA,GAAAE,EAAAjG,KAAA2F,EAAAK,GAGA,MAFAzB,GAAA1B,MAAA8C,EAAAK,GACAzB,EAAAH,MAAA,EACAG,CAOA,OAHAA,GAAA1B,MAAAmB,EACAO,EAAAH,MAAA,EAEAG,EAGA,OAAAA,WAKA,OAAYA,KAAAV,GAIZ,QAAAA,KACA,OAAYhB,MAAAmB,EAAAI,MAAA,GAxcZ,GACAJ,GADAiC,EAAA5E,OAAAG,UAAA0E,eAEAL,EACA,kBAAAM,gBAAApC,UAAA,aAEAqC,EAAA,gBAAAvG,GACAwG,EAAAxF,EAAAyF,kBACA,IAAAD,EAQA,YAPAD,IAGAvG,EAAAD,QAAAyG,GASAA,GAAAxF,EAAAyF,mBAAAF,EAAAvG,EAAAD,WAaAyG,EAAAtF,MAoBA,IAAA0C,GAAA,iBACAY,EAAA,iBACAX,EAAA,YACAE,EAAA,YAIAiB,KAUA0B,EAAAnE,EAAAZ,UAAAD,EAAAC,SACAW,GAAAX,UAAA+E,EAAAC,YAAApE,EACAA,EAAAoE,YAAArE,EACAA,EAAAsE,YAAA,oBAYAJ,EAAAK,oBAAA,SAAAC,GACA,GAAAC,GAAA,kBAAAD,MAAAH,WACA,SAAAI,IACAA,IAAAzE,GAGA,uBAAAyE,EAAAH,aAAAG,EAAAC,QAIAR,EAAAS,KAAA,SAAAH,GAOA,MANAtF,QAAA0F,eACA1F,OAAA0F,eAAAJ,EAAAvE,GAEAuE,EAAAK,UAAA5E,EAEAuE,EAAAnF,UAAAH,OAAAC,OAAAiF,GACAI,GAQAN,EAAAY,MAAA,SAAAjF,GACA,UAAAS,GAAAT,IA8EAK,EAAAK,EAAAlB,WAKA6E,EAAAa,MAAA,SAAAlG,EAAAC,EAAAC,EAAAC,GACA,GAAAgG,GAAA,GAAAzE,GACA3B,EAAAC,EAAAC,EAAAC,EAAAC,GAGA,OAAAkF,GAAAK,oBAAAzF,GACAkG,EACAA,EAAA5C,OAAA/D,KAAA,SAAAoC,GACA,MAAAA,GAAAwB,KAAAxB,EAAAC,MAAAsE,EAAA5C,UAqJAlC,EAAAkE,GAEAA,EAAAV,GAAA,WACA,MAAArD,OAGA+D,EAAAa,SAAA,WACA,4BAkCAf,EAAAgB,KAAA,SAAAC,GACA,GAAAD,KACA,QAAAE,KAAAD,GACAD,EAAA/B,KAAAiC,EAMA,OAJAF,GAAAG,UAIA,QAAAjD,KACA,KAAA8C,EAAAtB,QAAA,CACA,GAAAwB,GAAAF,EAAAI,KACA,IAAAF,IAAAD,GAGA,MAFA/C,GAAA1B,MAAA0E,EACAhD,EAAAH,MAAA,EACAG,EAQA,MADAA,GAAAH,MAAA,EACAG,IAsCA8B,EAAAX,SAMAhE,EAAAF,WACAgF,YAAA9E,EAEA+D,MAAA,SAAAiC,GASA,GARAlF,KAAAmF,KAAA,EACAnF,KAAA+B,KAAA,EACA/B,KAAAkC,KAAAV,EACAxB,KAAA4B,MAAA,EACA5B,KAAAsB,SAAA,KAEAtB,KAAA6C,WAAA/C,QAAAiD,IAEAmC,EACA,OAAAb,KAAArE,MAEA,MAAAqE,EAAAe,OAAA,IACA3B,EAAAjG,KAAAwC,KAAAqE,KACAf,OAAAe,EAAAgB,MAAA,MACArF,KAAAqE,GAAA7C,IAMA8D,KAAA,WACAtF,KAAA4B,MAAA,CAEA,IAAA2D,GAAAvF,KAAA6C,WAAA,GACA2C,EAAAD,EAAAvC,UACA,cAAAwC,EAAA/F,KACA,KAAA+F,GAAAhG,GAGA,OAAAQ,MAAAyF,MAGAtD,kBAAA,SAAAuD,GAMA,QAAAC,GAAAC,EAAAC,GAIA,MAHAnE,GAAAjC,KAAA,QACAiC,EAAAlC,IAAAkG,EACAzG,EAAA8C,KAAA6D,IACAC,EATA,GAAA7F,KAAA4B,KACA,KAAA8D,EAWA,QARAzG,GAAAe,KAQAwD,EAAAxD,KAAA6C,WAAAU,OAAA,EAA8CC,GAAA,IAAQA,EAAA,CACtD,GAAAhB,GAAAxC,KAAA6C,WAAAW,GACA9B,EAAAc,EAAAQ,UAEA,aAAAR,EAAAC,OAIA,MAAAkD,GAAA,MAGA,IAAAnD,EAAAC,QAAAzC,KAAAmF,KAAA,CACA,GAAAW,GAAArC,EAAAjG,KAAAgF,EAAA,YACAuD,EAAAtC,EAAAjG,KAAAgF,EAAA,aAEA,IAAAsD,GAAAC,EAAA,CACA,GAAA/F,KAAAmF,KAAA3C,EAAAE,SACA,MAAAiD,GAAAnD,EAAAE,UAAA,EACa,IAAA1C,KAAAmF,KAAA3C,EAAAG,WACb,MAAAgD,GAAAnD,EAAAG,gBAGW,IAAAmD,GACX,GAAA9F,KAAAmF,KAAA3C,EAAAE,SACA,MAAAiD,GAAAnD,EAAAE,UAAA,OAGW,KAAAqD,EAMX,SAAA5E,OAAA,yCALA,IAAAnB,KAAAmF,KAAA3C,EAAAG,WACA,MAAAgD,GAAAnD,EAAAG,gBAUAP,OAAA,SAAA3C,EAAAD,GACA,OAAAgE,GAAAxD,KAAA6C,WAAAU,OAAA,EAA8CC,GAAA,IAAQA,EAAA,CACtD,GAAAhB,GAAAxC,KAAA6C,WAAAW,EACA,IAAAhB,EAAAC,QAAAzC,KAAAmF,MACA1B,EAAAjG,KAAAgF,EAAA,eACAxC,KAAAmF,KAAA3C,EAAAG,WAAA,CACA,GAAAqD,GAAAxD,CACA,QAIAwD,IACA,UAAAvG,GACA,aAAAA,IACAuG,EAAAvD,QAAAjD,GACAA,GAAAwG,EAAArD,aAGAqD,EAAA,KAGA,IAAAtE,GAAAsE,IAAAhD,aAUA,OATAtB,GAAAjC,OACAiC,EAAAlC,MAEAwG,EACAhG,KAAA+B,KAAAiE,EAAArD,WAEA3C,KAAAiG,SAAAvE,GAGAW,GAGA4D,SAAA,SAAAvE,EAAAkB,GACA,aAAAlB,EAAAjC,KACA,KAAAiC,GAAAlC,GAGA,WAAAkC,EAAAjC,MACA,aAAAiC,EAAAjC,KACAO,KAAA+B,KAAAL,EAAAlC,IACO,WAAAkC,EAAAjC,MACPO,KAAAyF,KAAA/D,EAAAlC,IACAQ,KAAA+B,KAAA,OACO,WAAAL,EAAAjC,MAAAmD,IACP5C,KAAA+B,KAAAa,IAIAsD,OAAA,SAAAvD,GACA,OAAAa,GAAAxD,KAAA6C,WAAAU,OAAA,EAA8CC,GAAA,IAAQA,EAAA,CACtD,GAAAhB,GAAAxC,KAAA6C,WAAAW,EACA,IAAAhB,EAAAG,eAGA,MAFA3C,MAAAiG,SAAAzD,EAAAQ,WAAAR,EAAAI,UACAG,EAAAP,GACAH,IAKA8D,MAAA,SAAA1D,GACA,OAAAe,GAAAxD,KAAA6C,WAAAU,OAAA,EAA8CC,GAAA,IAAQA,EAAA,CACtD,GAAAhB,GAAAxC,KAAA6C,WAAAW,EACA,IAAAhB,EAAAC,WAAA,CACA,GAAAf,GAAAc,EAAAQ,UACA,cAAAtB,EAAAjC,KAAA,CACA,GAAA2G,GAAA1E,EAAAlC,GACAuD,GAAAP,GAEA,MAAA4D,IAMA,SAAAjF,OAAA,0BAGAkF,cAAA,SAAAlD,EAAArB,EAAAE,GAOA,MANAhC,MAAAsB,UACAC,SAAA2B,EAAAC,GACArB,aACAE,WAGAK,KAOA,gBAAAhE,KACA,gBAAAiI,eACA,gBAAA5H,WAAAsB,QJmF8BxC,KAAKJ,EAAU,WAAa,MAAO4C,SAAY/C,EAAoB,KAI3F,SAASI,EAAQD,GK3tBvB,QAAAmJ,KACA,SAAApF,OAAA,mCAEA,QAAAqF,KACA,SAAArF,OAAA,qCAsBA,QAAAsF,GAAAC,GACA,GAAAC,IAAAC,WAEA,MAAAA,YAAAF,EAAA,EAGA,KAAAC,IAAAJ,IAAAI,IAAAC,WAEA,MADAD,GAAAC,WACAA,WAAAF,EAAA,EAEA,KAEA,MAAAC,GAAAD,EAAA,GACK,MAAAG,GACL,IAEA,MAAAF,GAAAnJ,KAAA,KAAAkJ,EAAA,GACS,MAAAG,GAET,MAAAF,GAAAnJ,KAAAwC,KAAA0G,EAAA,KAMA,QAAAI,GAAAC,GACA,GAAAC,IAAAC,aAEA,MAAAA,cAAAF,EAGA,KAAAC,IAAAR,IAAAQ,IAAAC,aAEA,MADAD,GAAAC,aACAA,aAAAF,EAEA,KAEA,MAAAC,GAAAD,GACK,MAAAF,GACL,IAEA,MAAAG,GAAAxJ,KAAA,KAAAuJ,GACS,MAAAF,GAGT,MAAAG,GAAAxJ,KAAAwC,KAAA+G,KAYA,QAAAG,KACAC,GAAAC,IAGAD,GAAA,EACAC,EAAA7D,OACA8D,EAAAD,EAAAE,OAAAD,GAEAE,GAAA,EAEAF,EAAA9D,QACAiE,KAIA,QAAAA,KACA,IAAAL,EAAA,CAGA,GAAAM,GAAAhB,EAAAS,EACAC,IAAA,CAGA,KADA,GAAAO,GAAAL,EAAA9D,OACAmE,GAAA,CAGA,IAFAN,EAAAC,EACAA,OACAE,EAAAG,GACAN,GACAA,EAAAG,GAAAI,KAGAJ,IAAA,EACAG,EAAAL,EAAA9D,OAEA6D,EAAA,KACAD,GAAA,EACAL,EAAAW,IAiBA,QAAAG,GAAAlB,EAAAmB,GACA7H,KAAA0G,MACA1G,KAAA6H,QAYA,QAAAC,MAhKA,GAOAnB,GACAK,EARA1I,EAAAjB,EAAAD,YAgBA,WACA,IAEAuJ,EADA,kBAAAC,YACAA,WAEAL,EAEK,MAAAM,GACLF,EAAAJ,EAEA,IAEAS,EADA,kBAAAC,cACAA,aAEAT,EAEK,MAAAK,GACLG,EAAAR,KAuDA,IAEAY,GAFAC,KACAF,GAAA,EAEAI,GAAA,CAyCAjJ,GAAAyJ,SAAA,SAAArB,GACA,GAAAsB,GAAA,GAAAC,OAAAC,UAAA3E,OAAA,EACA,IAAA2E,UAAA3E,OAAA,EACA,OAAAC,GAAA,EAAuBA,EAAA0E,UAAA3E,OAAsBC,IAC7CwE,EAAAxE,EAAA,GAAA0E,UAAA1E,EAGA6D,GAAAvE,KAAA,GAAA8E,GAAAlB,EAAAsB,IACA,IAAAX,EAAA9D,QAAA4D,GACAV,EAAAe,IASAI,EAAA5I,UAAA2I,IAAA,WACA3H,KAAA0G,IAAAyB,MAAA,KAAAnI,KAAA6H,QAEAvJ,EAAA8J,MAAA,UACA9J,EAAA+J,SAAA,EACA/J,EAAAgK,OACAhK,EAAAiK,QACAjK,EAAAkK,QAAA,GACAlK,EAAAmK,YAIAnK,EAAAoK,GAAAZ,EACAxJ,EAAAqK,YAAAb,EACAxJ,EAAAsK,KAAAd,EACAxJ,EAAAuK,IAAAf,EACAxJ,EAAAwK,eAAAhB,EACAxJ,EAAAyK,mBAAAjB,EACAxJ,EAAA0K,KAAAlB,EAEAxJ,EAAA2K,QAAA,SAAA5E,GACA,SAAAlD,OAAA,qCAGA7C,EAAA4K,IAAA,WAA2B,WAC3B5K,EAAA6K,MAAA,SAAAC,GACA,SAAAjI,OAAA,mCAEA7C,EAAA+K,MAAA,WAA4B,WL6uBtB,SAAShM,EAAQD,EAASH,GAE/B,YAIA,SAASqM,GAAmBC,GAAO,GAAItB,MAAMuB,QAAQD,GAAM,CAAE,IAAK,GAAI/F,GAAI,EAAGiG,EAAOxB,MAAMsB,EAAIhG,QAASC,EAAI+F,EAAIhG,OAAQC,IAAOiG,EAAKjG,GAAK+F,EAAI/F,EAAM,OAAOiG,GAAe,MAAOxB,OAAMyB,KAAKH,GM/5B3L,QAAUI,KAAV,GAAAnG,EAAA,OAAAM,oBAAAvF,KAAA,SAAAqL,GAAA,cAAAA,EAAAzE,KAAAyE,EAAA7H,MAAA,OACMyB,EAAI,CADV,cAGIqG,GAAKrG,GAAGtF,UAAUC,IAAI,QACtByI,WAAW,SAAAkD,GACTD,EAAKrG,GAAGtF,UAAU6L,OAAO,SACxB,UANPH,EAAA7H,KAAA,UAQIyB,GAAKA,EAAI,GAAKkE,EARlBkC,EAAA7H,KAAA,+BAAA6H,GAAAtE,SAAA0E,EAAA,GAAAhK,MN65BC,GAAIgK,IM75BKL,GN65BgBM,IAAInG,mBAAmBQ,MMp6B3CuF,cAAWhM,SAASqM,iBAAiB,wBACrCxC,EAAMmC,EAAKtG,MAEjBsG,GAAK/J,QAAQ,SAASqK,GACpBA,EAAIC,IAAMD,EAAIE,aAAa,cAezB3C,IAAK,WACP,GAAM4C,GAAMX,GACZ/C,YAAW,WACT0D,EAAIvI,QACH,KACHwI,YAAY,SAAAT,GACVQ,EAAIvI,QACH,UNq8BC,SAAS1E,EAAQD,EAASH,GAE/B,YOj+BDA,GAAA,GACAA,EAAA,IPw+BM,SAASI,EAAQD,EAASH,GAE/B,YAMA,SAASuN,GAAuBjL,GAAO,MAAOA,IAAOA,EAAIkL,WAAalL,GAAQmL,QAASnL,GAEvF,QAAS+J,GAAmBC,GAAO,GAAItB,MAAMuB,QAAQD,GAAM,CAAE,IAAK,GAAI/F,GAAI,EAAGiG,EAAOxB,MAAMsB,EAAIhG,QAASC,EAAI+F,EAAIhG,OAAQC,IAAOiG,EAAKjG,GAAK+F,EAAI/F,EAAM,OAAOiG,GAAe,MAAOxB,OAAMyB,KAAKH,GQ5+B3L,QAASoB,KACP,MAAOC,GAAUC,KAAKC,SAAWC,EAAU,GAG7C,QAASC,GAAiBC,EAASC,GACjC,GAAMC,GAAIR,IACNS,EAAOvN,SAASwN,cAAc,MAClCD,GAAKE,UAAYH,EAAEI,UACnBH,EAAOA,EAAKI,SAAS,IACrB,EAAAC,EAAAf,SAAgBU,GAAOH,UAASC,YAEhCQ,EAAUC,YAAYP,GAGxB,QAASQ,KACP,IAAI,GAAIpI,GAAI,EAAGA,EAAI,GAAIA,IACrBwH,EAAiB,EAAG,GAEtB,KAAI,GAAIxH,GAAI,EAAGA,EAAI,GAAIA,IACrBwH,EAAiB,GAAI,GAEvB,KAAI,GAAIxH,GAAI,EAAGA,EAAI,EAAGA,IACpBwH,EAAiB,GAAI,OAEvB1D,OAAAgC,EAAIsB,IAAW9K,QAAQ,SAAA+L,GACrBA,EAAG9B,WAEL2B,EAAUxN,UAAUC,IAAI,SAlC1B,GAAA2N,GAAA7O,EAAA,GR++BKwO,EAAoBjB,EAAuBsB,GQ7+B1CJ,EAAY7N,SAASkO,cAAc,cACnCnB,EAAYc,EAAUxB,iBAAiB,OACvCa,EAAUH,EAAUrH,MAiC1BqI,MRs/BM,SAASvO,EAAQD,GAEtB,YSthCD,SAAS4O,KACR,GAAIC,GAAIC,EAAIC,CACZ,GACCF,GAAK,EAAIpB,KAAKC,SAAW,EACzBoB,EAAK,EAAIrB,KAAKC,SAAW,EACzBqB,EAAMF,EAAKA,EAAKC,EAAKA,QACdC,GAAO,GAAY,GAAPA,EAEpB,IAAIzO,GAAImN,KAAKuB,MAAK,EAAKvB,KAAKwB,IAAIF,GAAOA,EAEvC,OAAOF,GAAKvO,EAAI,EAGjB,QAAS4O,KACP,OACEC,IAAKP,IAAUQ,EAAUA,EACzBC,KAAsB,IAAhB5B,KAAKC,UAIf,QAAS4B,GAAgBb,EAAzBc,GAAmD,GAApB1B,GAAoB0B,EAApB1B,QAASC,EAAWyB,EAAXzB,QAChC0B,EAAQ/B,KAAKC,UAAYI,EAAUD,GAAWA,CACpDY,GAAGgB,MAAMD,MAAQA,EAAQ,IAEzB,IAAME,GAAMR,GAMZ,OALAT,GAAGgB,MAAMN,IAAMO,EAAIP,IAAM,KACzBV,EAAGgB,MAAMJ,KAAOK,EAAIL,KAAO,IAE3BZ,EAAGgB,MAAME,UAAT,UAA6C,IAAdlC,KAAKC,SAApC,OAEOe,ET0/BRhN,OAAOmO,eAAe5P,EAAS,cAC7BiD,OAAO,GShiCV,IACMmM,GAAU,GACH3O,UAASI,KAAKgP,aAGdpP,SAASI,KAAKiP,WTwkC1B9P,GAAQsN,QSriCMgC,GTyiCT,SAASrP,EAAQD,EAASH,GAE/B,YAMA,SAASuN,GAAuBjL,GAAO,MAAOA,IAAOA,EAAIkL,WAAalL,GAAQmL,QAASnL,GUrlCxF,QAAS4N,KACP,MAAOtC,MAAKC,SAAW,GAOzB,QAASsC,GAATT,GAA0C,GAAnB1B,GAAmB0B,EAAnB1B,QAASC,EAAUyB,EAAVzB,QAC1BmC,QACJ,IAAIC,EAAe,GACjBD,EAAIxP,SAASwN,cAAc,QAC3BgC,EAAEE,UAAY,OACd7B,EAAUC,YAAY0B,GACtBC,GAAgB,MACX,KAAIE,EAASjK,OAGlB,MAFA8J,GAAIG,EAASvI,MAiBf,MAZAwI,GAAY3K,KAAKuK,IACjB,EAAA5B,EAAAf,SAAgB2C,GAAIpC,UAASC,YAE7BtE,WAAW,SAAAkD,GACTuD,EAAER,MAAME,UAAR,eACmB,IAAJI,IADf,MACgC,IAAJA,IAD5B,SAEAE,EAAER,MAAMa,QAAU,IACjB,KAEH9G,WAAW,SAAAkD,GACT0D,EAAS1K,KAAK2K,EAAYE,OAAOF,EAAYG,QAAQP,GAAI,GAAG,KAC3D,KACIA,EAIT,QAASQ,KACPtD,YAAY,SAAAT,GACVsD,GAAenC,QAAS,EAAGC,QAAS,KACnC,KA5CL,GAAAY,GAAA7O,EAAA,GVulCKwO,EAAoBjB,EAAuBsB,GUrlC1CJ,EAAY7N,SAASkO,cAAc,UAMnCyB,KACAC,KACFH,EAAe,CAqCnBO,MV8lCM,SAASxQ,EAAQD,GAEtB,YW/oCD,IAAI,wBAAwB0Q,KAAKC,UAAUC,WAAY,CACrD,GAAMC,GAAMpQ,SAASkO,cAAc,WAC/BkC,IACFA,EAAIC,iBAAiB,QAAS,SAASrH,GACrCA,EAAEsH,iBACFC,MAAM","file":"js/index.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(1);\n\t\n\t__webpack_require__(2);\n\t\n\t__webpack_require__(4);\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(9);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar fontname = 'amatic';\n\t\n\tif (document.fonts) {\n\t  document.fonts.load('1em ' + fontname).then(function () {\n\t    document.body.classList.add('font-loaded');\n\t  }, function () {\n\t    document.body.classList.add('font-loaded');\n\t  });\n\t} else {\n\t  document.body.classname = 'font-loaded';\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {/**\n\t * Copyright (c) 2014, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n\t * additional grant of patent rights can be found in the PATENTS file in\n\t * the same directory.\n\t */\n\t\n\t!(function(global) {\n\t  \"use strict\";\n\t\n\t  var hasOwn = Object.prototype.hasOwnProperty;\n\t  var undefined; // More compressible than void 0.\n\t  var iteratorSymbol =\n\t    typeof Symbol === \"function\" && Symbol.iterator || \"@@iterator\";\n\t\n\t  var inModule = typeof module === \"object\";\n\t  var runtime = global.regeneratorRuntime;\n\t  if (runtime) {\n\t    if (inModule) {\n\t      // If regeneratorRuntime is defined globally and we're in a module,\n\t      // make the exports object identical to regeneratorRuntime.\n\t      module.exports = runtime;\n\t    }\n\t    // Don't bother evaluating the rest of this file if the runtime was\n\t    // already defined globally.\n\t    return;\n\t  }\n\t\n\t  // Define the runtime globally (as expected by generated code) as either\n\t  // module.exports (if we're in a module) or a new, empty object.\n\t  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\t\n\t  function wrap(innerFn, outerFn, self, tryLocsList) {\n\t    // If outerFn provided, then outerFn.prototype instanceof Generator.\n\t    var generator = Object.create((outerFn || Generator).prototype);\n\t    var context = new Context(tryLocsList || []);\n\t\n\t    // The ._invoke method unifies the implementations of the .next,\n\t    // .throw, and .return methods.\n\t    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\t\n\t    return generator;\n\t  }\n\t  runtime.wrap = wrap;\n\t\n\t  // Try/catch helper to minimize deoptimizations. Returns a completion\n\t  // record like context.tryEntries[i].completion. This interface could\n\t  // have been (and was previously) designed to take a closure to be\n\t  // invoked without arguments, but in all the cases we care about we\n\t  // already have an existing method we want to call, so there's no need\n\t  // to create a new function object. We can even get away with assuming\n\t  // the method takes exactly one argument, since that happens to be true\n\t  // in every case, so we don't have to touch the arguments object. The\n\t  // only additional allocation required is the completion record, which\n\t  // has a stable shape and so hopefully should be cheap to allocate.\n\t  function tryCatch(fn, obj, arg) {\n\t    try {\n\t      return { type: \"normal\", arg: fn.call(obj, arg) };\n\t    } catch (err) {\n\t      return { type: \"throw\", arg: err };\n\t    }\n\t  }\n\t\n\t  var GenStateSuspendedStart = \"suspendedStart\";\n\t  var GenStateSuspendedYield = \"suspendedYield\";\n\t  var GenStateExecuting = \"executing\";\n\t  var GenStateCompleted = \"completed\";\n\t\n\t  // Returning this object from the innerFn has the same effect as\n\t  // breaking out of the dispatch switch statement.\n\t  var ContinueSentinel = {};\n\t\n\t  // Dummy constructor functions that we use as the .constructor and\n\t  // .constructor.prototype properties for functions that return Generator\n\t  // objects. For full spec compliance, you may wish to configure your\n\t  // minifier not to mangle the names of these two functions.\n\t  function Generator() {}\n\t  function GeneratorFunction() {}\n\t  function GeneratorFunctionPrototype() {}\n\t\n\t  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;\n\t  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n\t  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n\t  GeneratorFunction.displayName = \"GeneratorFunction\";\n\t\n\t  // Helper for defining the .next, .throw, and .return methods of the\n\t  // Iterator interface in terms of a single ._invoke method.\n\t  function defineIteratorMethods(prototype) {\n\t    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n\t      prototype[method] = function(arg) {\n\t        return this._invoke(method, arg);\n\t      };\n\t    });\n\t  }\n\t\n\t  runtime.isGeneratorFunction = function(genFun) {\n\t    var ctor = typeof genFun === \"function\" && genFun.constructor;\n\t    return ctor\n\t      ? ctor === GeneratorFunction ||\n\t        // For the native GeneratorFunction constructor, the best we can\n\t        // do is to check its .name property.\n\t        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n\t      : false;\n\t  };\n\t\n\t  runtime.mark = function(genFun) {\n\t    if (Object.setPrototypeOf) {\n\t      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n\t    } else {\n\t      genFun.__proto__ = GeneratorFunctionPrototype;\n\t    }\n\t    genFun.prototype = Object.create(Gp);\n\t    return genFun;\n\t  };\n\t\n\t  // Within the body of any async function, `await x` is transformed to\n\t  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n\t  // `value instanceof AwaitArgument` to determine if the yielded value is\n\t  // meant to be awaited. Some may consider the name of this method too\n\t  // cutesy, but they are curmudgeons.\n\t  runtime.awrap = function(arg) {\n\t    return new AwaitArgument(arg);\n\t  };\n\t\n\t  function AwaitArgument(arg) {\n\t    this.arg = arg;\n\t  }\n\t\n\t  function AsyncIterator(generator) {\n\t    // This invoke function is written in a style that assumes some\n\t    // calling function (or Promise) will handle exceptions.\n\t    function invoke(method, arg) {\n\t      var result = generator[method](arg);\n\t      var value = result.value;\n\t      return value instanceof AwaitArgument\n\t        ? Promise.resolve(value.arg).then(invokeNext, invokeThrow)\n\t        : Promise.resolve(value).then(function(unwrapped) {\n\t            // When a yielded Promise is resolved, its final value becomes\n\t            // the .value of the Promise<{value,done}> result for the\n\t            // current iteration. If the Promise is rejected, however, the\n\t            // result for this iteration will be rejected with the same\n\t            // reason. Note that rejections of yielded Promises are not\n\t            // thrown back into the generator function, as is the case\n\t            // when an awaited Promise is rejected. This difference in\n\t            // behavior between yield and await is important, because it\n\t            // allows the consumer to decide what to do with the yielded\n\t            // rejection (swallow it and continue, manually .throw it back\n\t            // into the generator, abandon iteration, whatever). With\n\t            // await, by contrast, there is no opportunity to examine the\n\t            // rejection reason outside the generator function, so the\n\t            // only option is to throw it from the await expression, and\n\t            // let the generator function handle the exception.\n\t            result.value = unwrapped;\n\t            return result;\n\t          });\n\t    }\n\t\n\t    if (typeof process === \"object\" && process.domain) {\n\t      invoke = process.domain.bind(invoke);\n\t    }\n\t\n\t    var invokeNext = invoke.bind(generator, \"next\");\n\t    var invokeThrow = invoke.bind(generator, \"throw\");\n\t    var invokeReturn = invoke.bind(generator, \"return\");\n\t    var previousPromise;\n\t\n\t    function enqueue(method, arg) {\n\t      function callInvokeWithMethodAndArg() {\n\t        return invoke(method, arg);\n\t      }\n\t\n\t      return previousPromise =\n\t        // If enqueue has been called before, then we want to wait until\n\t        // all previous Promises have been resolved before calling invoke,\n\t        // so that results are always delivered in the correct order. If\n\t        // enqueue has not been called before, then it is important to\n\t        // call invoke immediately, without waiting on a callback to fire,\n\t        // so that the async generator function has the opportunity to do\n\t        // any necessary setup in a predictable way. This predictability\n\t        // is why the Promise constructor synchronously invokes its\n\t        // executor callback, and why async functions synchronously\n\t        // execute code before the first await. Since we implement simple\n\t        // async functions in terms of async generators, it is especially\n\t        // important to get this right, even though it requires care.\n\t        previousPromise ? previousPromise.then(\n\t          callInvokeWithMethodAndArg,\n\t          // Avoid propagating failures to Promises returned by later\n\t          // invocations of the iterator.\n\t          callInvokeWithMethodAndArg\n\t        ) : new Promise(function (resolve) {\n\t          resolve(callInvokeWithMethodAndArg());\n\t        });\n\t    }\n\t\n\t    // Define the unified helper method that is used to implement .next,\n\t    // .throw, and .return (see defineIteratorMethods).\n\t    this._invoke = enqueue;\n\t  }\n\t\n\t  defineIteratorMethods(AsyncIterator.prototype);\n\t\n\t  // Note that simple async functions are implemented on top of\n\t  // AsyncIterator objects; they just return a Promise for the value of\n\t  // the final result produced by the iterator.\n\t  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n\t    var iter = new AsyncIterator(\n\t      wrap(innerFn, outerFn, self, tryLocsList)\n\t    );\n\t\n\t    return runtime.isGeneratorFunction(outerFn)\n\t      ? iter // If outerFn is a generator, return the full iterator.\n\t      : iter.next().then(function(result) {\n\t          return result.done ? result.value : iter.next();\n\t        });\n\t  };\n\t\n\t  function makeInvokeMethod(innerFn, self, context) {\n\t    var state = GenStateSuspendedStart;\n\t\n\t    return function invoke(method, arg) {\n\t      if (state === GenStateExecuting) {\n\t        throw new Error(\"Generator is already running\");\n\t      }\n\t\n\t      if (state === GenStateCompleted) {\n\t        if (method === \"throw\") {\n\t          throw arg;\n\t        }\n\t\n\t        // Be forgiving, per 25.3.3.3.3 of the spec:\n\t        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\t        return doneResult();\n\t      }\n\t\n\t      while (true) {\n\t        var delegate = context.delegate;\n\t        if (delegate) {\n\t          if (method === \"return\" ||\n\t              (method === \"throw\" && delegate.iterator[method] === undefined)) {\n\t            // A return or throw (when the delegate iterator has no throw\n\t            // method) always terminates the yield* loop.\n\t            context.delegate = null;\n\t\n\t            // If the delegate iterator has a return method, give it a\n\t            // chance to clean up.\n\t            var returnMethod = delegate.iterator[\"return\"];\n\t            if (returnMethod) {\n\t              var record = tryCatch(returnMethod, delegate.iterator, arg);\n\t              if (record.type === \"throw\") {\n\t                // If the return method threw an exception, let that\n\t                // exception prevail over the original return or throw.\n\t                method = \"throw\";\n\t                arg = record.arg;\n\t                continue;\n\t              }\n\t            }\n\t\n\t            if (method === \"return\") {\n\t              // Continue with the outer return, now that the delegate\n\t              // iterator has been terminated.\n\t              continue;\n\t            }\n\t          }\n\t\n\t          var record = tryCatch(\n\t            delegate.iterator[method],\n\t            delegate.iterator,\n\t            arg\n\t          );\n\t\n\t          if (record.type === \"throw\") {\n\t            context.delegate = null;\n\t\n\t            // Like returning generator.throw(uncaught), but without the\n\t            // overhead of an extra function call.\n\t            method = \"throw\";\n\t            arg = record.arg;\n\t            continue;\n\t          }\n\t\n\t          // Delegate generator ran and handled its own exceptions so\n\t          // regardless of what the method was, we continue as if it is\n\t          // \"next\" with an undefined arg.\n\t          method = \"next\";\n\t          arg = undefined;\n\t\n\t          var info = record.arg;\n\t          if (info.done) {\n\t            context[delegate.resultName] = info.value;\n\t            context.next = delegate.nextLoc;\n\t          } else {\n\t            state = GenStateSuspendedYield;\n\t            return info;\n\t          }\n\t\n\t          context.delegate = null;\n\t        }\n\t\n\t        if (method === \"next\") {\n\t          context._sent = arg;\n\t\n\t          if (state === GenStateSuspendedYield) {\n\t            context.sent = arg;\n\t          } else {\n\t            context.sent = undefined;\n\t          }\n\t        } else if (method === \"throw\") {\n\t          if (state === GenStateSuspendedStart) {\n\t            state = GenStateCompleted;\n\t            throw arg;\n\t          }\n\t\n\t          if (context.dispatchException(arg)) {\n\t            // If the dispatched exception was caught by a catch block,\n\t            // then let that catch block handle the exception normally.\n\t            method = \"next\";\n\t            arg = undefined;\n\t          }\n\t\n\t        } else if (method === \"return\") {\n\t          context.abrupt(\"return\", arg);\n\t        }\n\t\n\t        state = GenStateExecuting;\n\t\n\t        var record = tryCatch(innerFn, self, context);\n\t        if (record.type === \"normal\") {\n\t          // If an exception is thrown from innerFn, we leave state ===\n\t          // GenStateExecuting and loop back for another invocation.\n\t          state = context.done\n\t            ? GenStateCompleted\n\t            : GenStateSuspendedYield;\n\t\n\t          var info = {\n\t            value: record.arg,\n\t            done: context.done\n\t          };\n\t\n\t          if (record.arg === ContinueSentinel) {\n\t            if (context.delegate && method === \"next\") {\n\t              // Deliberately forget the last sent value so that we don't\n\t              // accidentally pass it on to the delegate.\n\t              arg = undefined;\n\t            }\n\t          } else {\n\t            return info;\n\t          }\n\t\n\t        } else if (record.type === \"throw\") {\n\t          state = GenStateCompleted;\n\t          // Dispatch the exception by looping back around to the\n\t          // context.dispatchException(arg) call above.\n\t          method = \"throw\";\n\t          arg = record.arg;\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  // Define Generator.prototype.{next,throw,return} in terms of the\n\t  // unified ._invoke helper method.\n\t  defineIteratorMethods(Gp);\n\t\n\t  Gp[iteratorSymbol] = function() {\n\t    return this;\n\t  };\n\t\n\t  Gp.toString = function() {\n\t    return \"[object Generator]\";\n\t  };\n\t\n\t  function pushTryEntry(locs) {\n\t    var entry = { tryLoc: locs[0] };\n\t\n\t    if (1 in locs) {\n\t      entry.catchLoc = locs[1];\n\t    }\n\t\n\t    if (2 in locs) {\n\t      entry.finallyLoc = locs[2];\n\t      entry.afterLoc = locs[3];\n\t    }\n\t\n\t    this.tryEntries.push(entry);\n\t  }\n\t\n\t  function resetTryEntry(entry) {\n\t    var record = entry.completion || {};\n\t    record.type = \"normal\";\n\t    delete record.arg;\n\t    entry.completion = record;\n\t  }\n\t\n\t  function Context(tryLocsList) {\n\t    // The root entry object (effectively a try statement without a catch\n\t    // or a finally block) gives us a place to store values thrown from\n\t    // locations where there is no enclosing try statement.\n\t    this.tryEntries = [{ tryLoc: \"root\" }];\n\t    tryLocsList.forEach(pushTryEntry, this);\n\t    this.reset(true);\n\t  }\n\t\n\t  runtime.keys = function(object) {\n\t    var keys = [];\n\t    for (var key in object) {\n\t      keys.push(key);\n\t    }\n\t    keys.reverse();\n\t\n\t    // Rather than returning an object with a next method, we keep\n\t    // things simple and return the next function itself.\n\t    return function next() {\n\t      while (keys.length) {\n\t        var key = keys.pop();\n\t        if (key in object) {\n\t          next.value = key;\n\t          next.done = false;\n\t          return next;\n\t        }\n\t      }\n\t\n\t      // To avoid creating an additional object, we just hang the .value\n\t      // and .done properties off the next function object itself. This\n\t      // also ensures that the minifier will not anonymize the function.\n\t      next.done = true;\n\t      return next;\n\t    };\n\t  };\n\t\n\t  function values(iterable) {\n\t    if (iterable) {\n\t      var iteratorMethod = iterable[iteratorSymbol];\n\t      if (iteratorMethod) {\n\t        return iteratorMethod.call(iterable);\n\t      }\n\t\n\t      if (typeof iterable.next === \"function\") {\n\t        return iterable;\n\t      }\n\t\n\t      if (!isNaN(iterable.length)) {\n\t        var i = -1, next = function next() {\n\t          while (++i < iterable.length) {\n\t            if (hasOwn.call(iterable, i)) {\n\t              next.value = iterable[i];\n\t              next.done = false;\n\t              return next;\n\t            }\n\t          }\n\t\n\t          next.value = undefined;\n\t          next.done = true;\n\t\n\t          return next;\n\t        };\n\t\n\t        return next.next = next;\n\t      }\n\t    }\n\t\n\t    // Return an iterator with no values.\n\t    return { next: doneResult };\n\t  }\n\t  runtime.values = values;\n\t\n\t  function doneResult() {\n\t    return { value: undefined, done: true };\n\t  }\n\t\n\t  Context.prototype = {\n\t    constructor: Context,\n\t\n\t    reset: function(skipTempReset) {\n\t      this.prev = 0;\n\t      this.next = 0;\n\t      this.sent = undefined;\n\t      this.done = false;\n\t      this.delegate = null;\n\t\n\t      this.tryEntries.forEach(resetTryEntry);\n\t\n\t      if (!skipTempReset) {\n\t        for (var name in this) {\n\t          // Not sure about the optimal order of these conditions:\n\t          if (name.charAt(0) === \"t\" &&\n\t              hasOwn.call(this, name) &&\n\t              !isNaN(+name.slice(1))) {\n\t            this[name] = undefined;\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    stop: function() {\n\t      this.done = true;\n\t\n\t      var rootEntry = this.tryEntries[0];\n\t      var rootRecord = rootEntry.completion;\n\t      if (rootRecord.type === \"throw\") {\n\t        throw rootRecord.arg;\n\t      }\n\t\n\t      return this.rval;\n\t    },\n\t\n\t    dispatchException: function(exception) {\n\t      if (this.done) {\n\t        throw exception;\n\t      }\n\t\n\t      var context = this;\n\t      function handle(loc, caught) {\n\t        record.type = \"throw\";\n\t        record.arg = exception;\n\t        context.next = loc;\n\t        return !!caught;\n\t      }\n\t\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        var record = entry.completion;\n\t\n\t        if (entry.tryLoc === \"root\") {\n\t          // Exception thrown outside of any try block that could handle\n\t          // it, so set the completion value of the entire function to\n\t          // throw the exception.\n\t          return handle(\"end\");\n\t        }\n\t\n\t        if (entry.tryLoc <= this.prev) {\n\t          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n\t          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\t\n\t          if (hasCatch && hasFinally) {\n\t            if (this.prev < entry.catchLoc) {\n\t              return handle(entry.catchLoc, true);\n\t            } else if (this.prev < entry.finallyLoc) {\n\t              return handle(entry.finallyLoc);\n\t            }\n\t\n\t          } else if (hasCatch) {\n\t            if (this.prev < entry.catchLoc) {\n\t              return handle(entry.catchLoc, true);\n\t            }\n\t\n\t          } else if (hasFinally) {\n\t            if (this.prev < entry.finallyLoc) {\n\t              return handle(entry.finallyLoc);\n\t            }\n\t\n\t          } else {\n\t            throw new Error(\"try statement without catch or finally\");\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    abrupt: function(type, arg) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.tryLoc <= this.prev &&\n\t            hasOwn.call(entry, \"finallyLoc\") &&\n\t            this.prev < entry.finallyLoc) {\n\t          var finallyEntry = entry;\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (finallyEntry &&\n\t          (type === \"break\" ||\n\t           type === \"continue\") &&\n\t          finallyEntry.tryLoc <= arg &&\n\t          arg <= finallyEntry.finallyLoc) {\n\t        // Ignore the finally entry if control is not jumping to a\n\t        // location outside the try/catch block.\n\t        finallyEntry = null;\n\t      }\n\t\n\t      var record = finallyEntry ? finallyEntry.completion : {};\n\t      record.type = type;\n\t      record.arg = arg;\n\t\n\t      if (finallyEntry) {\n\t        this.next = finallyEntry.finallyLoc;\n\t      } else {\n\t        this.complete(record);\n\t      }\n\t\n\t      return ContinueSentinel;\n\t    },\n\t\n\t    complete: function(record, afterLoc) {\n\t      if (record.type === \"throw\") {\n\t        throw record.arg;\n\t      }\n\t\n\t      if (record.type === \"break\" ||\n\t          record.type === \"continue\") {\n\t        this.next = record.arg;\n\t      } else if (record.type === \"return\") {\n\t        this.rval = record.arg;\n\t        this.next = \"end\";\n\t      } else if (record.type === \"normal\" && afterLoc) {\n\t        this.next = afterLoc;\n\t      }\n\t    },\n\t\n\t    finish: function(finallyLoc) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.finallyLoc === finallyLoc) {\n\t          this.complete(entry.completion, entry.afterLoc);\n\t          resetTryEntry(entry);\n\t          return ContinueSentinel;\n\t        }\n\t      }\n\t    },\n\t\n\t    \"catch\": function(tryLoc) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.tryLoc === tryLoc) {\n\t          var record = entry.completion;\n\t          if (record.type === \"throw\") {\n\t            var thrown = record.arg;\n\t            resetTryEntry(entry);\n\t          }\n\t          return thrown;\n\t        }\n\t      }\n\t\n\t      // The context.catch method must only be called with a location\n\t      // argument that corresponds to a known catch block.\n\t      throw new Error(\"illegal catch attempt\");\n\t    },\n\t\n\t    delegateYield: function(iterable, resultName, nextLoc) {\n\t      this.delegate = {\n\t        iterator: values(iterable),\n\t        resultName: resultName,\n\t        nextLoc: nextLoc\n\t      };\n\t\n\t      return ContinueSentinel;\n\t    }\n\t  };\n\t})(\n\t  // Among the various tricks for obtaining a reference to the global\n\t  // object, this seems to be the most reliable technique that does not\n\t  // use indirect eval (which violates Content Security Policy).\n\t  typeof global === \"object\" ? global :\n\t  typeof window === \"object\" ? window :\n\t  typeof self === \"object\" ? self : this\n\t);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(3)))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _marked = [showHide].map(regeneratorRuntime.mark);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tvar imgs = [].concat(_toConsumableArray(document.querySelectorAll('#logo-overlays img')));\n\tvar len = imgs.length;\n\t\n\timgs.forEach(function (img) {\n\t  img.src = img.getAttribute('data-src');\n\t});\n\t\n\tfunction showHide() {\n\t  var i;\n\t  return regeneratorRuntime.wrap(function showHide$(_context) {\n\t    while (1) {\n\t      switch (_context.prev = _context.next) {\n\t        case 0:\n\t          i = 0;\n\t\n\t        case 1:\n\t          if (false) {\n\t            _context.next = 9;\n\t            break;\n\t          }\n\t\n\t          imgs[i].classList.add('show');\n\t          setTimeout(function (_) {\n\t            imgs[i].classList.remove('show');\n\t          }, 5000);\n\t          _context.next = 6;\n\t          return;\n\t\n\t        case 6:\n\t          i = (i + 1) % len;\n\t          _context.next = 1;\n\t          break;\n\t\n\t        case 9:\n\t        case 'end':\n\t          return _context.stop();\n\t      }\n\t    }\n\t  }, _marked[0], this);\n\t}\n\t\n\tif (len) {\n\t  (function () {\n\t    var gen = showHide();\n\t    setTimeout(function () {\n\t      gen.next();\n\t    }, 3000);\n\t    setInterval(function (_) {\n\t      gen.next();\n\t    }, 15000);\n\t  })();\n\t}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(6);\n\t\n\t__webpack_require__(8);\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _randomTransform = __webpack_require__(7);\n\t\n\tvar _randomTransform2 = _interopRequireDefault(_randomTransform);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tvar container = document.querySelector('#fragments');\n\tvar fragments = container.querySelectorAll('svg');\n\tvar fragLen = fragments.length;\n\t\n\tfunction getRamdomFragment() {\n\t  return fragments[Math.random() * fragLen | 0];\n\t}\n\t\n\tfunction generateFragment(minSize, maxSize) {\n\t  var f = getRamdomFragment();\n\t  var newF = document.createElement('div');\n\t  newF.innerHTML = f.outerHTML;\n\t  newF = newF.children[0];\n\t  (0, _randomTransform2.default)(newF, { minSize: minSize, maxSize: maxSize });\n\t\n\t  container.appendChild(newF);\n\t}\n\t\n\tfunction renderFragments() {\n\t  for (var i = 0; i < 20; i++) {\n\t    generateFragment(5, 10);\n\t  }\n\t  for (var _i = 0; _i < 10; _i++) {\n\t    generateFragment(10, 20);\n\t  }\n\t  for (var _i2 = 0; _i2 < 5; _i2++) {\n\t    generateFragment(20, 40);\n\t  }\n\t  [].concat(_toConsumableArray(fragments)).forEach(function (el) {\n\t    el.remove();\n\t  });\n\t  container.classList.add('ready');\n\t}\n\t\n\trenderFragments();\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar startY = 0;\n\tvar middleY = 300;\n\tvar endY = document.body.clientHeight;\n\t\n\tvar startX = 0;\n\tvar endX = document.body.clientWidth;\n\t\n\tfunction nrand() {\n\t  var x1, x2, rad, y1;\n\t  do {\n\t    x1 = 2 * Math.random() - 1;\n\t    x2 = 2 * Math.random() - 1;\n\t    rad = x1 * x1 + x2 * x2;\n\t  } while (rad >= 1 || rad == 0);\n\t\n\t  var c = Math.sqrt(-2 * Math.log(rad) / rad);\n\t\n\t  return x1 * c / 2;\n\t}\n\t\n\tfunction getRandomPos() {\n\t  return {\n\t    top: nrand() * middleY + middleY,\n\t    left: Math.random() * 100\n\t  };\n\t}\n\t\n\tfunction randomTransform(el, _ref) {\n\t  var minSize = _ref.minSize,\n\t      maxSize = _ref.maxSize;\n\t\n\t  var width = Math.random() * (maxSize - minSize) + minSize;\n\t  el.style.width = width + 'px';\n\t\n\t  var pos = getRandomPos();\n\t  el.style.top = pos.top + 'px';\n\t  el.style.left = pos.left + '%';\n\t\n\t  el.style.transform = 'rotate(' + Math.random() * 180 + 'deg)';\n\t\n\t  return el;\n\t}\n\t\n\texports.default = randomTransform;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _randomTransform = __webpack_require__(7);\n\t\n\tvar _randomTransform2 = _interopRequireDefault(_randomTransform);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar container = document.querySelector('#stars');\n\t\n\tfunction r() {\n\t  return Math.random() - 0.5;\n\t}\n\t\n\tvar starPool = [];\n\tvar runningStar = [];\n\tvar allStarCount = 0;\n\t\n\tfunction generateStar(_ref) {\n\t  var minSize = _ref.minSize,\n\t      maxSize = _ref.maxSize;\n\t\n\t  var s = void 0;\n\t  if (allStarCount < 10) {\n\t    s = document.createElement('span');\n\t    s.className = 'star';\n\t    container.appendChild(s);\n\t    allStarCount += 1;\n\t  } else if (starPool.length) {\n\t    s = starPool.pop();\n\t  } else {\n\t    return;\n\t  }\n\t\n\t  runningStar.push(s);\n\t  (0, _randomTransform2.default)(s, { minSize: minSize, maxSize: maxSize });\n\t\n\t  setTimeout(function (_) {\n\t    s.style.transform = 'translate3d(' + r() * 800 + 'px,' + r() * 800 + 'px, 0)';\n\t    s.style.opacity = 0.3;\n\t  }, 300);\n\t\n\t  setTimeout(function (_) {\n\t    starPool.push(runningStar.splice(runningStar.indexOf(s), 1)[0]);\n\t  }, 10000);\n\t  return s;\n\t}\n\t\n\tfunction renderStars() {\n\t  setInterval(function (_) {\n\t    generateStar({ minSize: 2, maxSize: 5 });\n\t  }, 1000);\n\t}\n\t\n\trenderStars();\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tif (/WeiBo|MicroMessenger/i.test(navigator.userAgent)) {\n\t  var btn = document.querySelector('#btn-ios');\n\t  if (btn) {\n\t    btn.addEventListener('click', function (e) {\n\t      e.preventDefault();\n\t      alert('请先接入互联网：点击右上角，选择 “在浏览器打开”。');\n\t    });\n\t  }\n\t}\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// js/index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9098416aae6643d32108","import './load-font.es'\nimport 'babel-regenerator-runtime'\nimport './logo.es'\nimport './background.es'\nimport './f_weixin.es'\n\n\n\n// WEBPACK FOOTER //\n// ./source/js/index.es","const fontname = 'amatic'\n\nif (document.fonts) {\n  document.fonts.load('1em ' + fontname).then(function() {\n    document.body.classList.add('font-loaded')\n  }, function() {\n    document.body.classList.add('font-loaded')\n  })\n} else {\n  document.body.classname = 'font-loaded'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./source/js/load-font.es","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var iteratorSymbol =\n    typeof Symbol === \"function\" && Symbol.iterator || \"@@iterator\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided, then outerFn.prototype instanceof Generator.\n    var generator = Object.create((outerFn || Generator).prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `value instanceof AwaitArgument` to determine if the yielded value is\n  // meant to be awaited. Some may consider the name of this method too\n  // cutesy, but they are curmudgeons.\n  runtime.awrap = function(arg) {\n    return new AwaitArgument(arg);\n  };\n\n  function AwaitArgument(arg) {\n    this.arg = arg;\n  }\n\n  function AsyncIterator(generator) {\n    // This invoke function is written in a style that assumes some\n    // calling function (or Promise) will handle exceptions.\n    function invoke(method, arg) {\n      var result = generator[method](arg);\n      var value = result.value;\n      return value instanceof AwaitArgument\n        ? Promise.resolve(value.arg).then(invokeNext, invokeThrow)\n        : Promise.resolve(value).then(function(unwrapped) {\n            // When a yielded Promise is resolved, its final value becomes\n            // the .value of the Promise<{value,done}> result for the\n            // current iteration. If the Promise is rejected, however, the\n            // result for this iteration will be rejected with the same\n            // reason. Note that rejections of yielded Promises are not\n            // thrown back into the generator function, as is the case\n            // when an awaited Promise is rejected. This difference in\n            // behavior between yield and await is important, because it\n            // allows the consumer to decide what to do with the yielded\n            // rejection (swallow it and continue, manually .throw it back\n            // into the generator, abandon iteration, whatever). With\n            // await, by contrast, there is no opportunity to examine the\n            // rejection reason outside the generator function, so the\n            // only option is to throw it from the await expression, and\n            // let the generator function handle the exception.\n            result.value = unwrapped;\n            return result;\n          });\n    }\n\n    if (typeof process === \"object\" && process.domain) {\n      invoke = process.domain.bind(invoke);\n    }\n\n    var invokeNext = invoke.bind(generator, \"next\");\n    var invokeThrow = invoke.bind(generator, \"throw\");\n    var invokeReturn = invoke.bind(generator, \"return\");\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return invoke(method, arg);\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : new Promise(function (resolve) {\n          resolve(callInvokeWithMethodAndArg());\n        });\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          if (method === \"return\" ||\n              (method === \"throw\" && delegate.iterator[method] === undefined)) {\n            // A return or throw (when the delegate iterator has no throw\n            // method) always terminates the yield* loop.\n            context.delegate = null;\n\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            var returnMethod = delegate.iterator[\"return\"];\n            if (returnMethod) {\n              var record = tryCatch(returnMethod, delegate.iterator, arg);\n              if (record.type === \"throw\") {\n                // If the return method threw an exception, let that\n                // exception prevail over the original return or throw.\n                method = \"throw\";\n                arg = record.arg;\n                continue;\n              }\n            }\n\n            if (method === \"return\") {\n              // Continue with the outer return, now that the delegate\n              // iterator has been terminated.\n              continue;\n            }\n          }\n\n          var record = tryCatch(\n            delegate.iterator[method],\n            delegate.iterator,\n            arg\n          );\n\n          if (record.type === \"throw\") {\n            context.delegate = null;\n\n            // Like returning generator.throw(uncaught), but without the\n            // overhead of an extra function call.\n            method = \"throw\";\n            arg = record.arg;\n            continue;\n          }\n\n          // Delegate generator ran and handled its own exceptions so\n          // regardless of what the method was, we continue as if it is\n          // \"next\" with an undefined arg.\n          method = \"next\";\n          arg = undefined;\n\n          var info = record.arg;\n          if (info.done) {\n            context[delegate.resultName] = info.value;\n            context.next = delegate.nextLoc;\n          } else {\n            state = GenStateSuspendedYield;\n            return info;\n          }\n\n          context.delegate = null;\n        }\n\n        if (method === \"next\") {\n          context._sent = arg;\n\n          if (state === GenStateSuspendedYield) {\n            context.sent = arg;\n          } else {\n            context.sent = undefined;\n          }\n        } else if (method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw arg;\n          }\n\n          if (context.dispatchException(arg)) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            method = \"next\";\n            arg = undefined;\n          }\n\n        } else if (method === \"return\") {\n          context.abrupt(\"return\", arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          var info = {\n            value: record.arg,\n            done: context.done\n          };\n\n          if (record.arg === ContinueSentinel) {\n            if (context.delegate && method === \"next\") {\n              // Deliberately forget the last sent value so that we don't\n              // accidentally pass it on to the delegate.\n              arg = undefined;\n            }\n          } else {\n            return info;\n          }\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(arg) call above.\n          method = \"throw\";\n          arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      this.sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.next = finallyEntry.finallyLoc;\n      } else {\n        this.complete(record);\n      }\n\n      return ContinueSentinel;\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = record.arg;\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-regenerator-runtime/runtime.js\n// module id = 2\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 3\n// module chunks = 0","const imgs = [...document.querySelectorAll('#logo-overlays img')]\nconst len = imgs.length\n\nimgs.forEach(function(img) {\n  img.src = img.getAttribute('data-src')\n})\n\nfunction *showHide() {\n  let i = 0\n  while(42) {\n    imgs[i].classList.add('show')\n    setTimeout(_ => {\n      imgs[i].classList.remove('show')\n    }, 5000)\n    yield\n    i = (i + 1) % len\n  }\n}\n\nif (len) {\n  const gen = showHide()\n  setTimeout(function() {\n    gen.next()\n  }, 3000)\n  setInterval(_ => {\n    gen.next()\n  }, 15000)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./source/js/logo.es","import './fragments.es'\nimport './stars.es'\n\n\n\n// WEBPACK FOOTER //\n// ./source/js/background.es","import randomTransform from './randomTransform.es'\n\nconst container = document.querySelector('#fragments')\nconst fragments = container.querySelectorAll('svg')\nconst fragLen = fragments.length\n\n\nfunction getRamdomFragment() {\n  return fragments[Math.random() * fragLen | 0]\n}\n\nfunction generateFragment(minSize, maxSize) {\n  const f = getRamdomFragment()\n  let newF = document.createElement('div')\n  newF.innerHTML = f.outerHTML\n  newF = newF.children[0]\n  randomTransform(newF, {minSize, maxSize})\n\n  container.appendChild(newF)\n}\n\nfunction renderFragments() {\n  for(let i = 0; i < 20; i++) {\n    generateFragment(5, 10)\n  }\n  for(let i = 0; i < 10; i++) {\n    generateFragment(10, 20)\n  }\n  for(let i = 0; i < 5; i++) {\n    generateFragment(20, 40)\n  }\n  [...fragments].forEach(el => {\n    el.remove()\n  })\n  container.classList.add('ready')\n}\n\nrenderFragments()\n\n\n\n// WEBPACK FOOTER //\n// ./source/js/fragments.es","const startY = 0\nconst middleY = 300\nconst endY = document.body.clientHeight\n\nconst startX = 0\nconst endX = document.body.clientWidth\n\nfunction nrand(){\n\tvar x1, x2, rad, y1\n\tdo {\n\t\tx1 = 2 * Math.random() - 1\n\t\tx2 = 2 * Math.random() - 1\n\t\trad = x1 * x1 + x2 * x2\n\t} while(rad >= 1 || rad == 0)\n\n\tvar c = Math.sqrt(-2 * Math.log(rad) / rad)\n\n\treturn x1 * c / 2\n}\n\nfunction getRandomPos() {\n  return {\n    top: nrand() * middleY + middleY,\n    left: Math.random() * 100,\n  }\n}\n\nfunction randomTransform(el, { minSize, maxSize }) {\n  const width = Math.random() * (maxSize - minSize) + minSize\n  el.style.width = width + 'px'\n\n  const pos = getRandomPos()\n  el.style.top = pos.top + 'px'\n  el.style.left = pos.left + '%'\n\n  el.style.transform = `rotate(${Math.random()*180}deg)`\n\n  return el\n}\n\nexport default randomTransform\n\n\n\n// WEBPACK FOOTER //\n// ./source/js/randomTransform.es","import randomTransform from './randomTransform.es'\n\nconst container = document.querySelector('#stars')\n\nfunction r() {\n  return Math.random() - 0.5\n}\n\nconst starPool = []\nconst runningStar = []\nlet allStarCount = 0\n\nfunction generateStar({minSize, maxSize}) {\n  let s\n  if (allStarCount < 10) {\n    s = document.createElement('span')\n    s.className = 'star'\n    container.appendChild(s)\n    allStarCount += 1\n  } else if (starPool.length) {\n    s = starPool.pop()\n  } else {\n    return\n  }\n\n  runningStar.push(s)\n  randomTransform(s, {minSize, maxSize})\n\n  setTimeout(_ => {\n    s.style.transform =\n    `translate3d(${r()*800}px,${r()*800}px, 0)`\n    s.style.opacity = 0.3\n  }, 300)\n\n  setTimeout(_ => {\n    starPool.push(runningStar.splice(runningStar.indexOf(s), 1)[0])\n  }, 10000)\n  return s\n}\n\n\nfunction renderStars() {\n  setInterval(_ => {\n    generateStar({ minSize: 2, maxSize: 5 })\n  }, 1000)\n}\n\nrenderStars()\n\n\n\n// WEBPACK FOOTER //\n// ./source/js/stars.es","if (/WeiBo|MicroMessenger/i.test(navigator.userAgent)) {\n  const btn = document.querySelector('#btn-ios')\n  if (btn) {\n    btn.addEventListener('click', function(e) {\n      e.preventDefault()\n      alert('请先接入互联网：点击右上角，选择 “在浏览器打开”。')\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./source/js/f_weixin.es"],"sourceRoot":""}